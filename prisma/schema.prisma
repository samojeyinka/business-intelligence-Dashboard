// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  role          UserRole  @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  ventures      Venture[] @relation("VentureFounder")
  upvotes       Upvote[]
  comments      Comment[]
}

enum UserRole {
  USER
  ADMIN
}

model Venture {
  id              String           @id @default(cuid())
  name            String
  slug            String           @unique
  description     String
  longDescription String?          @db.Text
  logo            String?
  website         String?
  twitter         String?
  linkedin        String?
  github          String?
  stage           VentureStage
  status          VentureStatus    @default(DRAFT)
  isAnonymous     Boolean          @default(false)
  isStealthMode   Boolean          @default(false)
  isLookingForCollaborators Boolean @default(false)
  sectors         String[]
  technologies    String[]
  founders        User[]           @relation("VentureFounder")
  teamSize        Int              @default(1)
  foundedDate     DateTime?
  upvotes         Upvote[]
  comments        Comment[]
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
}

enum VentureStage {
  IDEA
  PROTOTYPE
  MVP
  GROWTH
  SCALE
}

enum VentureStatus {
  DRAFT
  PENDING
  APPROVED
  FEATURED
  REJECTED
}

model Upvote {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  venture   Venture  @relation(fields: [ventureId], references: [id], onDelete: Cascade)
  ventureId String
  createdAt DateTime @default(now())

  @@unique([userId, ventureId])
}

model Comment {
  id        String   @id @default(cuid())
  content   String   @db.Text
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  venture   Venture  @relation(fields: [ventureId], references: [id], onDelete: Cascade)
  ventureId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}